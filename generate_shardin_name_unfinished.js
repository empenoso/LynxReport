/**
 * LynxReport: —É—á—ë—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–π üìö [Node.js Release]
 * 
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è pdf –∏ html –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π –≤ –ì—É–≥–ª –¢–∞–±–ª–∏—Ü–µ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é 
 * –∫–ª–∏–µ–Ω—Ç—Å–∫—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Node.js –æ—Ç Google –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ API Google Sheets 
 *
 * –ó–∞–ø—É—Å–∫ –ø–æ–¥ Linux: $ npm start
 * –ó–∞–ø—É—Å–∫ –ø–æ–¥ Windows: start.bat
 * 
 * –û–ø–∏—Å–∞–Ω–∏–µ: https://habr.com/ru/post/515316/
 *
 * @author Mikhail Shardin [–ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω] 
 * @site https://shardin.name/
 * 
 * Last updated: 03.12.2024
 * 
 */

const {
    google
} = require('googleapis');
const secrets = require('./secrets/secret'); // –∫–ª—é—á–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
const fs = require('fs');
const puppeteer = require('puppeteer');
const moment = require('moment');

const SHEET_ID = '18YPDc6bs17CNwd8NuLpBUn9OZyMigVjYKbCQ1_--Dkw'; // Your spreadsheet ID
const RANGE_SHEET1 = '–î–∞–Ω–Ω—ã–µ';
const RANGE_SHEET4 = '–†–µ—Å—É—Ä—Å—ã';

async function authorize() {
    const auth = new google.auth.GoogleAuth({
        keyFile: './secrets/credentials.json', // Path to your service account key
        scopes: ['https://www.googleapis.com/auth/spreadsheets.readonly'],
    });
    return auth.getClient();
}

// –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
async function getSheetData(auth, sheetId, range) {
    const sheets = google.sheets({
        version: 'v4',
        auth
    });
    const response = await sheets.spreadsheets.values.get({
        spreadsheetId: sheetId,
        range: range,
    });
    return response.data.values;
}

// –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —è—á–µ–µ–∫
async function getSheetCell(auth, sheetId, ranges) {
    const sheets = google.sheets({
        version: 'v4',
        auth
    });
    const response = await sheets.spreadsheets.values.batchGet({
        spreadsheetId: sheetId,
        ranges, // Pass the array of ranges here
    });
    return response.data;
}

(async () => {
    const authClient = await authorize();

    console.log("LynxReport: —É—á—ë—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–π üìö [Node.js Release] –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—É –≤ %s. \n", (new Date()).toLocaleString("ru-ru"));

    // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google –¢–∞–±–ª–∏—Ü
    const sheet1Data = await getSheetData(authClient, SHEET_ID, RANGE_SHEET1);
    const sheet4Data = await getSheetData(authClient, SHEET_ID, RANGE_SHEET4);

    console.log(`–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Timelines Google Charts –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Å –ª–∏—Å—Ç–∞ ${RANGE_SHEET4}.`);
    const resources = sheet4Data.slice(1).map(row => {
        const [title, count, dateFrom, dateTo] = row;
        if (title && title !== '–ò—Ç–æ–≥–æ:') {
            const [yearFrom, monthFrom] = dateFrom.split('-').map(Number);
            const [yearTo, monthTo] = dateTo.split('-').map(Number);
            return [
                '–ü—É–±–ª–∏–∫–∞—Ü–∏–∏',
                `${title}: ${count} —à—Ç.`,
                `new Date(${yearFrom}, ${monthFrom - 1})`,
                `new Date(${yearTo}, ${monthTo})`,
            ];
        }
        return null;
    }).filter(Boolean);

    const timelines = `
        dataTable.addColumn({ type: 'string', id: '–ó–∞–≥–æ–ª–æ–≤–æ–∫' });
        dataTable.addColumn({ type: 'string', id: '–ù–∞–∑–≤–∞–Ω–∏–µ' });
        dataTable.addColumn({ type: 'date', id: 'Start' });
        dataTable.addColumn({ type: 'date', id: 'End' });
        dataTable.addRows([
        // –ù–∞—á–∞–ª–æ –≤—Å—Ç–∞–≤–∫–∏ –∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ generate_google_charts_timelines        
        ${JSON.stringify(resources)
                .replace(/\"new/gm, 'new')
                .replace(/\)\"/gm, ')')
                .replace(/\,\[/gm, ',\n        [')
                .replace(/\[\[/gm, '[')
                .replace(/\]\]/gm, '],')
        }
        // –í—ã–±–æ—Ä–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ ${new Date().toLocaleString("ru-ru")} 
        ]);
    `;
    fs.writeFileSync('./generate_google_charts_timelines.txt', timelines);
    console.log(`–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Timelines Google Charts –¥–ª—è html –∫–æ–¥–∞ —Å –ª–∏—Å—Ç–∞ ${RANGE_SHEET4} –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n`);

    // =============================================================

    console.log(`–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π —Å –ª–∏—Å—Ç–∞ ${RANGE_SHEET1}.\n`);
    const topics = sheet1Data.slice(1).map(row => row[5]).filter(Boolean);
    const uniqueTopics = [...new Set(topics)];
    console.log(`–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–º: ${JSON.stringify(uniqueTopics)}.\n`)

    let publications = '<!-- –ù–∞—á–∞–ª–æ –≤—Å—Ç–∞–≤–∫–∏ –∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ generate_publications -->\n<ol>\n';

    // –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–π
    const rangesPublicationStatistics = ['shardin.name!A1', 'shardin.name!A3', 'shardin.name!A4'];
    const sheet6Data = await getSheetCell(authClient, SHEET_ID, rangesPublicationStatistics);
    const PublicationStatistics = sheet6Data.valueRanges.map(range => range.values ?.[0]?.[0] || null);
    console.log(`–ü–æ–¥–≥—Ä—É–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–π:\n${JSON.stringify(PublicationStatistics, null, 2)} `);

    publications += `<p>–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å —á–µ—Ä–µ–∑ <a target="_blank" rel="noopener noreferrer" href="https://t.me/mshardin_bot">–º–æ–µ–≥–æ
      —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ ü§ñ</a> –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã—Ö–æ–¥–µ –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±–µ–∑ —Å–ø–∞–º–∞.<br><br>
      –ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –º–æ–∂–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å–∫–∞—á–∞—Ç—å –ª—é–±—É—é –∏–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞
      –∑–Ω–∞—á–æ–∫ üíæ —Å–ø—Ä–∞–≤–∞ –æ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ê –µ—â—ë –º–æ–∂–Ω–æ –æ–±—Å—É–¥–∏—Ç—å –ª—é–±—É—é –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é —Ç–µ–º—É –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö -
      –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏.</p>\n
      <small class="text-muted">${PublicationStatistics[0]}<br>
      <ul>
        <li>${PublicationStatistics[1]}</li>
        <li>${PublicationStatistics[2]}</li>
      </ul>
      </small></p>\n
      <p>–ï—Å–ª–∏ –í–∞–º –ø–æ–º–æ–≥–ª–∏ –º–æ–∏ —Å—Ç–∞—Ç—å–∏, —Ç–æ –º–æ–∂–Ω–æ <a target="_blank" rel="noopener noreferrer" href="https://www.tbank.ru/rm/shardin.mikhail1/0dKi144262/">–ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∞–≤—Ç–æ—Ä–∞ —Å –ø–æ–º–æ—â—å—é –¥–æ–Ω–∞—Ç–∞ üí∏</a>.</p>`

    // –¥–∞–ª—å—à–µ —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–º –ø–æ —Ç–µ–º–∞–º
    uniqueTopics.forEach(topic => {
        publications += `<h5 style="margin-top: 8px;">–ü–æ —Ç–µ–º–µ ¬´${topic}¬ª:</h5>\n`;
        sheet1Data.slice(1).forEach(row => {
            const [title, type, dateStr, url, description, topicName] = row;
            if (topicName === topic && url) {
                const date = moment(dateStr, 'YYYY-MM-DD').format('DD.MM.YYYY');
                publications += `<li>${description}. <a target="_blank" rel="noopener noreferrer" href="${url}">${title}</a> –æ—Ç ${date}.</li>\n`;
            }
        });
    });
    publications += '</ol>\n<!-- –ö–æ–Ω–µ—Ü –≤—Å—Ç–∞–≤–∫–∏ –∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ -->';
    fs.writeFileSync('./generate_publications.txt', publications);
    console.log(`–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π —Å –ª–∏—Å—Ç–∞ ${RANGE_SHEET1} –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n`);

    // =============================================================

    console.log(`–ì–µ–Ω–µ—Ä–∞—Ü–∏—è pdf –ø–æ —Å—Å—ã–ª–∫–∞–º –∏–∑ —Ç–∞–±–ª–∏—Ü—ã.`);
    const browser = await puppeteer.launch({
        headless: true
    });
    for (const row of sheet1Data.slice(1)) {
        const [title, type, dateStr, url] = row;
        if (type === '–í–µ–±' && url) {
            const page = await browser.newPage();
            await page.goto(url, {
                waitUntil: 'networkidle2',
                timeout: 120000
            });
            const path = `./articles/${dateStr}_${url.replace(/https?:\/\//, '').split('/')[0].replace(/\./g, '-')}.pdf`;
            await page.pdf({
                path,
                format: 'A4'
            });
            await page.close();
        }
    }
    await browser.close();
    console.log(`–ì–µ–Ω–µ—Ä–∞—Ü–∏—è pdf –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n`);
})();